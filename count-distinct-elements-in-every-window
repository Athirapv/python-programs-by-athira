//Given an array of integers and a number K. Find the count of distinct elements in every window of size K in the array.
import java.util.*;
public class SubsetofArray{

public static ArrayList<Integer> countDistinct(int A[], int n, int k)
    {
        HashMap<Integer,Integer>map=new HashMap<>();
        ArrayList<Integer> fin= new ArrayList<>();
        //generate map for first k element and it's freq
        for(int i=0; i<k; i++){ 
            if(map.containsKey(A[i])){
                map.put(A[i],map.get(A[i])+1);
            }
            else{
                map.put(A[i],1);
            }
            
        }
        fin.add(map.size());
        
        for(int i=k; i<n;i++){
            //remove first element-freq from map
            if(map.containsKey(A[i-k]) && map.get(A[i-k])<=1){
                map.remove(A[i-k]);
            }
            else{
                map.put(A[i-k],map.get(A[i-k])-1);
            }
            //add new element-freq in map
            if(map.containsKey(A[i])){
                  map.put(A[i],map.get(A[i])+1);
            }
            else{
                  map.put(A[i],1);
            }
            //push map size
            fin.add(map.size());
        }
        return fin;
    }
public static void main(String[] args){
    int[] a1={1,2,1,3,4,2,3};
    System.out.println(countDistinct(a1,a1.length,4));
}
}
